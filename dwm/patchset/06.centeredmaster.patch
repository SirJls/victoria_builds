diff --git a/dwm.c b/dwm.c
index 0362114..fa5ae4c 100644
--- a/dwm.c
+++ b/dwm.c
@@ -209,6 +209,7 @@ static void spawn(const Arg *arg);
 static void tag(const Arg *arg);
 static void tagmon(const Arg *arg);
 static void tile(Monitor *);
+static void centeredmaster(Monitor *);
 static void togglebar(const Arg *arg);
 static void togglefloating(const Arg *arg);
 static void toggletag(const Arg *arg);
@@ -1690,6 +1691,46 @@ tile(Monitor *m)
 }
 
 void
+centeredmaster(Monitor *m)
+{
+	unsigned int i, n, w, mh, mw, mx, mxo, my, myo, tx;
+	Client *c;
+
+	// Count number of clients in the selected monitor
+	for(n = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), n++);
+	if(n == 0)
+		return;
+
+	// initialize nmaster area
+	if(n > m->nmaster) {
+		// go mfact box in the center if more than nmaster clients
+		mw = m->nmaster ? m->ww * m->mfact : 0;
+		mh = m->nmaster ? m->wh * m->mfact : 0;
+		mx = mxo = (m->ww - mw) / 2;
+		my = myo = (m->wh - mh) / 2;
+	} else {
+		// Go fullscreen if all clients are in the master area
+		mh = m->wh;
+		mw = m->ww;
+		mx = mxo = 0;
+		my = mxo = 0;
+	}
+
+	for(i = tx = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), i++)
+		if(i < m->nmaster) {
+			// nmaster clients are stacked horizontally, in the center of the screen
+			w = (mw + mxo - mx) / (MIN(n, m->nmaster) - i);
+			resize(c, m->wx + mx, m->wy + my, w - (2*c->bw), mh - (2*c->bw), False);
+			mx += WIDTH(c);
+		} else {
+			// Stack clients are stacked horizontally
+			w = (m->ww - tx) / (n - i);
+			resize(c, m->wx + tx, m->wy, w - (2*c->bw), m->wh - (2*c->bw), False);
+			tx += WIDTH(c);
+		}
+}
+
+void
 togglebar(const Arg *arg)
 {
 	selmon->showbar = !selmon->showbar;
